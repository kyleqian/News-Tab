// Generated by CoffeeScript 1.9.3
(function() {
  (function($) {
    var nytUrl, setStorage, settings;
    if (!settings in window) {
      window.alert("ERROR! Must set settings.js -- see README");
      throw "ERROR! Must set settings.js -- see README";
    }
    settings = window.settings;
    nytUrl = "" + settings.nytPrefix + settings.nytKey;
    $(window).bind("keydown", settings.tabBind, function(e) {
      $.getJSON(nytUrl, function(response) {
        return chrome.storage.local.get({
          visited: []
        }, function(object) {
          var entry, i, len, ref, results, url, visited;
          if (chrome.runtime.lastError) {
            return window.alert("getStorage ERROR! => " + chrome.runtime.lastError);
          } else {
            visited = object.visited;
            ref = response.results;
            results = [];
            for (i = 0, len = ref.length; i < len; i++) {
              entry = ref[i];
              url = entry.url;
              if (visited.indexOf(url) === -1) {
                visited.push(url);
                setStorage(visited);
                chrome.runtime.sendMessage({
                  url: url
                });
                break;
              } else {
                results.push(void 0);
              }
            }
            return results;
          }
        });
      });
      return false;
    });
    $(window).bind("keydown", "ctrl+e", function(e) {
      chrome.storage.local.remove("visited", function() {
        if (chrome.runtime.lastError) {
          return window.alert("remove ERROR! => " + chrome.runtime.lastError);
        } else {
          return window.alert("Removed \"visited\" from local storage");
        }
      });
      return false;
    });
    return setStorage = function(data) {
      return chrome.storage.local.set({
        visited: data
      }, function() {
        if (chrome.runtime.lastError) {
          return window.alert("setStorage ERROR! => " + chrome.runtime.lastError);
        }
      });
    };
  })(jQuery);

}).call(this);
